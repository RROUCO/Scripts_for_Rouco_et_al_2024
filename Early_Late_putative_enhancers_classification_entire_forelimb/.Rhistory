axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), segment.size=0.1, nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 0.1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), segment.size=0.1, nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.5, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.2, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
ggsave("Number of enhancers in different interaction domains.pdf", width = 10, height = 12)
common.enhancers <- filter(domains.plot, variable == 'n_C_enhancers')
capture.output(summary(common.enhancers$value), file=paste0("summary_of_Common_FL_enhancers.txt"))
early.enhancers <- filter(domains.plot, variable == 'n_E_enhancers')
capture.output(summary(early.enhancers$value), file=paste0("summary_of_E10.5-specific_FL_enhancers.txt"))
late.enhancers <- filter(domains.plot, variable == 'n_L_enhancers')
capture.output(summary(late.enhancers$value), file=paste0("summary_of_E13.5-specific_FL_enhancers.txt"))
write.table(domains.plot, "domains_plot.csv", sep = ",")
# move into R
library(GenomicRanges)
library(rtracklayer)
library(dplyr)
library(ggplot2)
library(plyranges)
library(ggrepel)
library(reshape2)
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
# add to the enhancer.gr the name of the interaction domain gene
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
export.bed(enhancers.gr, "H3K27ac_FL_classified_peaks_with_genes_mm39.bed")
ov.enh.summary <- summarise(group_by(ov.enh, queryHits),
genes = paste(unique(sort(genes))),
enhancers = paste(unique(sort(subjectHits)), collapse = ", "),
# categories = paste(unique(sort(cate)), collapse = ", "),
categories = paste(unique(sort(cate)), collapse = "_"),
nenhancers = length(unique(subjectHits)),
ncat = length(unique(cate)),
n_C = sum(cate == "C"),
n_E = sum(cate == "E"),
n_L = sum(cate == "L"))
domains.gr$enh <- NA
domains.gr$enh[ov.enh.summary$queryHits] <- ov.enh.summary$enhancers
domains.gr$n.enh <- 0
domains.gr$n.enh[ov.enh.summary$queryHits] <- ov.enh.summary$nenhancers
domains.gr$enh.category <- "No_enhancer"
domains.gr$enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$categories
domains.gr$n.enh.category <- 0
domains.gr$n.enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$ncat
order.enh.cat = c("C_E_L", "C_E", "C_L", "E_L", "C", "E", "L")
domains.gr$enh.category <- factor(domains.gr$enh.category, levels = order.enh.cat)
domains.gr$n_C_enhancers <- 0
domains.gr$n_C_enhancers <- ov.enh.summary$n_C
domains.gr$n_E_enhancers <- 0
domains.gr$n_E_enhancers <- ov.enh.summary$n_E
domains.gr$n_L_enhancers <- 0
domains.gr$n_L_enhancers <- ov.enh.summary$n_L
# transform domains.gr in a dataframe and reshape the variables with melt to run ggplot (one row per point)
# mcols extract metadata of the gr object into a DataFrame object
frame_domains <- as.data.frame(mcols(domains.gr))
domains.plot <- melt(frame_domains, measure.vars = c('n_C_enhancers','n_E_enhancers', 'n_L_enhancers'))
domains.plot$labels <- NA
genes_to_plot <- c('Shox2','Sox11','Sox9','Prrx2','Wnt5a','Tbx5','Twist1','Tbx18')
# to print labels of selected genes
for (my.gene in genes_to_plot) {
domains.plot$labels[grepl(paste0(", ", my.gene, ","), domains.plot$name)] <- my.gene
domains.plot$labels[grepl(paste0("^", my.gene, ","), domains.plot$name)] <- my.gene
domains.plot$labels[grepl(paste0(", ", my.gene, "$"), domains.plot$name)] <- my.gene
domains.plot$labels[grepl(paste0("^", my.gene, "$"), domains.plot$name)] <- my.gene
}
domains.plot$alpha <- 0.4
domains.plot$alpha[!is.na(domains.plot$labels)] <- 1
# conversion of the enhancers category names to a new pretty.name,
# fixing the order to be used for ggplot visualization (see l.92)
pretty.names <- c('n_C_enhancers'='Common enhancers',
'n_E_enhancers'='E10.5-specific enhancers',
'n_L_enhancers'='E13.5-specific enhancers')
domains.plot$pretty.variable <- pretty.names[domains.plot$variable]
# attribute an order to the pretty.variable enhancers categories using the pretty.names string order
domains.plot$pretty.variable <- factor(domains.plot$pretty.variable, levels = unname(pretty.names))
# print number of enhancers (sum), positioned at -Inf
# for number of domains, used length(y) instead of sum(y)
f <- function(y) {
list(label=paste0("n enhancers = ",sum(y)), y= -1)
}
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
enhancers.gr
ov.enh.summary
frame_domains
write.table(select(frame_domains, name, n.enh, enh.category, n.enh.category, n_C_enhancers, n_E_enhancers, n_L_enhancers), "domains_mm39.csv", sep=",", quote = FALSE, col.names = TRUE, row.names = FALSE)
$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
enhancers.gr
ov.enh
sum(ov.enh)
summary(ov.enh)
ov.enh
install.packages(c("dbplyr", "digest", "ggprism", "ggraph", "ggsci", "globals", "graphlayouts", "igraph", "lattice", "pkgbuild", "processx", "ragg", "remotes", "sass", "Seurat", "spatstat.explore", "systemfonts", "tidyselect", "tinytex"))
library(GenomicRanges)
library(rtracklayer)
library(dplyr)
library(ggplot2)
library(plyranges)
library(ggrepel)
library(reshape2)
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
# add to the enhancer.gr the name of the interaction domain gene
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
library(rtracklayer)
library(dplyr)
library(ggplot2)
library(plyranges)
library(ggrepel)
library(reshape2)
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
View(enhancers.gr)
ov.enh.summary <- summarise(group_by(ov.enh, queryHits),
genes = paste(unique(sort(genes))),
enhancers = paste(unique(sort(subjectHits)), collapse = ", "),
# categories = paste(unique(sort(cate)), collapse = ", "),
categories = paste(unique(sort(cate)), collapse = "_"),
nenhancers = length(unique(subjectHits)),
ncat = length(unique(cate)),
n_C = sum(cate == "C"),
n_E = sum(cate == "E"),
n_L = sum(cate == "L"))
domains.gr$enh <- NA
domains.gr$enh[ov.enh.summary$queryHits] <- ov.enh.summary$enhancers
domains.gr$n.enh <- 0
domains.gr$n.enh[ov.enh.summary$queryHits] <- ov.enh.summary$nenhancers
domains.gr$enh.category <- "No_enhancer"
domains.gr$enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$categories
domains.gr$n.enh.category <- 0
domains.gr$n.enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$ncat
order.enh.cat = c("C_E_L", "C_E", "C_L", "E_L", "C", "E", "L")
domains.gr$enh.category <- factor(domains.gr$enh.category, levels = order.enh.cat)
domains.gr$n_C_enhancers <- 0
domains.gr$n_C_enhancers <- ov.enh.summary$n_C
domains.gr$n_E_enhancers <- 0
domains.gr$n_E_enhancers <- ov.enh.summary$n_E
domains.gr$n_L_enhancers <- 0
domains.gr$n_L_enhancers <- ov.enh.summary$n_L
# transform domains.gr in a dataframe and reshape the variables with melt to run ggplot (one row per point)
# mcols extract metadata of the gr object into a DataFrame object
frame_domains <- as.data.frame(mcols(domains.gr))
View(frame_domains)
domains.plot <- melt(frame_domains, measure.vars = c('n_C_enhancers','n_E_enhancers', 'n_L_enhancers'))
domains.plot$labels <- NA
genes_to_plot <- c('Shox2','Sox11','Sox9','Prrx2','Wnt5a','Tbx5','Twist1','Tbx18')
# to print labels of selected genes
for (my.gene in genes_to_plot) {
domains.plot$labels[grepl(paste0(", ", my.gene, ","), domains.plot$name)] <- my.gene
domains.plot$labels[grepl(paste0("^", my.gene, ","), domains.plot$name)] <- my.gene
domains.plot$labels[grepl(paste0(", ", my.gene, "$"), domains.plot$name)] <- my.gene
domains.plot$labels[grepl(paste0("^", my.gene, "$"), domains.plot$name)] <- my.gene
}
domains.plot$alpha <- 0.4
domains.plot$alpha[!is.na(domains.plot$labels)] <- 1
pretty.names <- c('n_C_enhancers'='Common enhancers',
'n_E_enhancers'='E10.5-specific enhancers',
'n_L_enhancers'='E13.5-specific enhancers')
domains.plot$pretty.variable <- pretty.names[domains.plot$variable]
# attribute an order to the pretty.variable enhancers categories using the pretty.names string order
domains.plot$pretty.variable <- factor(domains.plot$pretty.variable, levels = unname(pretty.names))
# print number of enhancers (sum), positioned at -Inf
# for number of domains, used length(y) instead of sum(y)
f <- function(y) {
list(label=paste0("n enhancers = ",sum(y)), y= -1)
}
ggplot(domains.plot, aes(x=pretty.variable, y=value)) +
geom_boxplot(outlier.shape = NA) +
geom_label_repel(aes(label = labels), nudge_x=0.1, direction="y") +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11, face="bold"),
axis.title.x=element_text(margin = margin(t = 8)),
axis.title.y=element_text(margin = margin(r = 8))) +
scale_alpha(guide = "none") +
xlab("enhancers.category") +
ylim(-1, 34) +
geom_jitter(aes(alpha = alpha), size = 1) +
stat_summary(fun=mean, geom="crossbar", linetype = "dashed", linewidth = 0.3) +
stat_summary_bin(fun.data=f, geom="text", angle = 0 ) +
ggtitle("Number of enhancers in different interaction domains")
# move into R
library(GenomicRanges)
library(rtracklayer)
library(dplyr)
library(ggplot2)
library(plyranges)
library(ggrepel)
library(reshape2)
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
# add to the enhancer.gr the name of the interaction domain gene
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
ov.enh.summary <- summarise(group_by(ov.enh, queryHits),
genes = paste(unique(sort(genes))),
enhancers = paste(unique(sort(subjectHits)), collapse = ", "),
# categories = paste(unique(sort(cate)), collapse = ", "),
categories = paste(unique(sort(cate)), collapse = "_"),
nenhancers = length(unique(subjectHits)),
ncat = length(unique(cate)),
n_C = sum(cate == "C"),
n_E = sum(cate == "E"),
n_L = sum(cate == "L"))
domains.gr$enh <- NA
domains.gr$enh[ov.enh.summary$queryHits] <- ov.enh.summary$enhancers
domains.gr$n.enh <- 0
domains.gr$n.enh[ov.enh.summary$queryHits] <- ov.enh.summary$nenhancers
domains.gr$enh.category <- "No_enhancer"
domains.gr$enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$categories
domains.gr$n.enh.category <- 0
domains.gr$n.enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$ncat
order.enh.cat = c("C_E_L", "C_E", "C_L", "E_L", "C", "E", "L")
domains.gr$enh.category <- factor(domains.gr$enh.category, levels = order.enh.cat)
domains.gr$n_C_enhancers <- 0
domains.gr$n_C_enhancers <- ov.enh.summary$n_C
domains.gr$n_E_enhancers <- 0
domains.gr$n_E_enhancers <- ov.enh.summary$n_E
domains.gr$n_L_enhancers <- 0
domains.gr$n_L_enhancers <- ov.enh.summary$n_L
# transform domains.gr in a dataframe and reshape the variables with melt to run ggplot (one row per point)
# mcols extract metadata of the gr object into a DataFrame object
frame_domains <- as.data.frame(mcols(domains.gr))
domains.plot <- melt(frame_domains, measure.vars = c('n_C_enhancers','n_E_enhancers', 'n_L_enhancers'))
rm (domains.plot)
common.enhancers <- filter(domains.plot, variable == 'n_C_enhancers')
capture.output(summary(common.enhancers$value), file=paste0("summary_of_Common_FL_enhancers.txt"))
early.enhancers <- filter(domains.plot, variable == 'n_E_enhancers')
capture.output(summary(early.enhancers$value), file=paste0("summary_of_E10.5-specific_FL_enhancers.txt"))
late.enhancers <- filter(domains.plot, variable == 'n_L_enhancers')
capture.output(summary(late.enhancers$value), file=paste0("summary_of_E13.5-specific_FL_enhancers.txt"))
domains.plot <- melt(frame_domains, measure.vars = c('n_C_enhancers','n_E_enhancers', 'n_L_enhancers'))
common.enhancers <- filter(domains.plot, variable == 'n_C_enhancers')
capture.output(summary(common.enhancers$value), file=paste0("summary_of_Common_FL_enhancers.txt"))
early.enhancers <- filter(domains.plot, variable == 'n_E_enhancers')
capture.output(summary(early.enhancers$value), file=paste0("summary_of_E10.5-specific_FL_enhancers.txt"))
late.enhancers <- filter(domains.plot, variable == 'n_L_enhancers')
capture.output(summary(late.enhancers$value), file=paste0("summary_of_E13.5-specific_FL_enhancers.txt"))
View(domains.plot)
setwd("~/Library/CloudStorage/Dropbox/Andrey_LAB_EXP_DESIGN_RESULTS/9_GitHub_RRouco/Scripts_for_Rouco_et_al_2024/Early_Late_putative_enhancers_classification_entire_forelimb")
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
# add to the enhancer.gr the name of the interaction domain gene
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
export.bed(enhancers.gr, "H3K27ac_FL_classified_peaks_with_genes_mm39.bed")
ov.enh.summary <- summarise(group_by(ov.enh, queryHits),
genes = paste(unique(sort(genes))),
enhancers = paste(unique(sort(subjectHits)), collapse = ", "),
# categories = paste(unique(sort(cate)), collapse = ", "),
categories = paste(unique(sort(cate)), collapse = "_"),
nenhancers = length(unique(subjectHits)),
ncat = length(unique(cate)),
n_C = sum(cate == "C"),
n_E = sum(cate == "E"),
n_L = sum(cate == "L"))
domains.gr$enh <- NA
domains.gr$enh[ov.enh.summary$queryHits] <- ov.enh.summary$enhancers
domains.gr$n.enh <- 0
domains.gr$n.enh[ov.enh.summary$queryHits] <- ov.enh.summary$nenhancers
domains.gr$enh.category <- "No_enhancer"
domains.gr$enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$categories
domains.gr$n.enh.category <- 0
domains.gr$n.enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$ncat
order.enh.cat = c("C_E_L", "C_E", "C_L", "E_L", "C", "E", "L")
domains.gr$enh.category <- factor(domains.gr$enh.category, levels = order.enh.cat)
domains.gr$n_C_enhancers <- 0
domains.gr$n_C_enhancers <- ov.enh.summary$n_C
domains.gr$n_E_enhancers <- 0
domains.gr$n_E_enhancers <- ov.enh.summary$n_E
domains.gr$n_L_enhancers <- 0
domains.gr$n_L_enhancers <- ov.enh.summary$n_L
# transform domains.gr in a dataframe and reshape the variables with melt to run ggplot (one row per point)
# mcols extract metadata of the gr object into a DataFrame object
frame_domains <- as.data.frame(mcols(domains.gr))
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
# add to the enhancer.gr the name of the interaction domain gene
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
wd
domains.gr <- import.bed(domains)
library(GenomicRanges)
library(rtracklayer)
library(dplyr)
library(ggplot2)
library(plyranges)
library(ggrepel)
library(reshape2)
wd <- "/Users/nccrgenetics/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late/"
domains <- "Filtered_Curated_gene_and_interaction_domain_mm39.bed"
enhancers <- "ChIP/H3K27ac_FL_classified_peaks.bed"
# domains and stages-classified FL enhancers/H3K27ac peaks
setwd(wd)
domains.gr <- import.bed(domains)
setwd("~/Library/CloudStorage/Dropbox/Trajectories_Rouco_et_al/Limb_wide_early-late")
domains.gr <- import.bed(domains)
enhancers.gr <- import.bed(enhancers)
ov.enh <- as.data.frame(findOverlaps(domains.gr, enhancers.gr))
ov.enh$cate <- enhancers.gr$name[ov.enh$subjectHits]
ov.enh$genes <- domains.gr$name[ov.enh$queryHits]
# add to the enhancer.gr the name of the interaction domain gene
enhancers.gr$name <- paste0(enhancers.gr$name, "_", ov.enh$genes[match(1:length(enhancers.gr),ov.enh$subjectHits)])
ov.enh.summary <- summarise(group_by(ov.enh, queryHits),
genes = paste(unique(sort(genes))),
enhancers = paste(unique(sort(subjectHits)), collapse = ", "),
# categories = paste(unique(sort(cate)), collapse = ", "),
categories = paste(unique(sort(cate)), collapse = "_"),
nenhancers = length(unique(subjectHits)),
ncat = length(unique(cate)),
n_C = sum(cate == "C"),
n_E = sum(cate == "E"),
n_L = sum(cate == "L"))
domains.gr$enh <- NA
domains.gr$enh[ov.enh.summary$queryHits] <- ov.enh.summary$enhancers
domains.gr$n.enh <- 0
domains.gr$n.enh[ov.enh.summary$queryHits] <- ov.enh.summary$nenhancers
domains.gr$enh.category <- "No_enhancer"
domains.gr$enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$categories
domains.gr$n.enh.category <- 0
domains.gr$n.enh.category[ov.enh.summary$queryHits] <- ov.enh.summary$ncat
order.enh.cat = c("C_E_L", "C_E", "C_L", "E_L", "C", "E", "L")
domains.gr$enh.category <- factor(domains.gr$enh.category, levels = order.enh.cat)
domains.gr$n_C_enhancers <- 0
domains.gr$n_C_enhancers <- ov.enh.summary$n_C
domains.gr$n_E_enhancers <- 0
domains.gr$n_E_enhancers <- ov.enh.summary$n_E
domains.gr$n_L_enhancers <- 0
domains.gr$n_L_enhancers <- ov.enh.summary$n_L
setwd("~/Library/CloudStorage/Dropbox/Andrey_LAB_EXP_DESIGN_RESULTS/9_GitHub_RRouco/Scripts_for_Rouco_et_al_2024/Early_Late_putative_enhancers_classification_entire_forelimb")
write.table(select(frame_domains, name, n.enh, enh.category, n.enh.category, n_C_enhancers, n_E_enhancers, n_L_enhancers), "domains_mm39.csv", sep=",", quote = FALSE, col.names = TRUE, row.names = FALSE)
# transform domains.gr in a dataframe and reshape the variables with melt to run ggplot (one row per point)
# mcols extract metadata of the gr object into a DataFrame object
frame_domains <- as.data.frame(mcols(domains.gr))
write.table(select(frame_domains, name, n.enh, enh.category, n.enh.category, n_C_enhancers, n_E_enhancers, n_L_enhancers), "domains_mm39.csv", sep=",", quote = FALSE, col.names = TRUE, row.names = FALSE)
